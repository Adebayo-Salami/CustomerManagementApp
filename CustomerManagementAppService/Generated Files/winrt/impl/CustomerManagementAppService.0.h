// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.211028.7

#pragma once
#ifndef WINRT_CustomerManagementAppService_0_H
#define WINRT_CustomerManagementAppService_0_H
WINRT_EXPORT namespace winrt::CustomerManagementAppService
{
    struct IUser;
    struct User;
}
namespace winrt::impl
{
    template <> struct category<winrt::CustomerManagementAppService::IUser>{ using type = interface_category; };
    template <> struct category<winrt::CustomerManagementAppService::User>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::CustomerManagementAppService::User> = L"CustomerManagementAppService.User";
    template <> inline constexpr auto& name_v<winrt::CustomerManagementAppService::IUser> = L"CustomerManagementAppService.IUser";
    template <> inline constexpr guid guid_v<winrt::CustomerManagementAppService::IUser>{ 0x70B97C51,0xDE81,0x52DB,{ 0xBD,0x1C,0x5C,0xE4,0x2B,0x71,0xB9,0x8F } }; // 70B97C51-DE81-52DB-BD1C-5CE42B71B98F
    template <> struct default_interface<winrt::CustomerManagementAppService::User>{ using type = winrt::CustomerManagementAppService::IUser; };
    template <> struct abi<winrt::CustomerManagementAppService::IUser>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_MyProperty(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MyProperty(int32_t) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_CustomerManagementAppService_IUser
    {
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MyProperty() const;
        WINRT_IMPL_AUTO(void) MyProperty(int32_t value) const;
    };
    template <> struct consume<winrt::CustomerManagementAppService::IUser>
    {
        template <typename D> using type = consume_CustomerManagementAppService_IUser<D>;
    };
}
#endif
