// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210930.14

#pragma once
#ifndef WINRT_CustomerManagementAppData_0_H
#define WINRT_CustomerManagementAppData_0_H
WINRT_EXPORT namespace winrt::CustomerManagementAppData
{
    struct IClass;
    struct Class;
}
namespace winrt::impl
{
    template <> struct category<winrt::CustomerManagementAppData::IClass>{ using type = interface_category; };
    template <> struct category<winrt::CustomerManagementAppData::Class>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::CustomerManagementAppData::Class> = L"CustomerManagementAppData.Class";
    template <> inline constexpr auto& name_v<winrt::CustomerManagementAppData::IClass> = L"CustomerManagementAppData.IClass";
    template <> inline constexpr guid guid_v<winrt::CustomerManagementAppData::IClass>{ 0xC435B5F8,0x652C,0x5F82,{ 0xBC,0xF4,0xF6,0x95,0x4F,0x1F,0x69,0xFE } }; // C435B5F8-652C-5F82-BCF4-F6954F1F69FE
    template <> struct default_interface<winrt::CustomerManagementAppData::Class>{ using type = winrt::CustomerManagementAppData::IClass; };
    template <> struct abi<winrt::CustomerManagementAppData::IClass>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_MyProperty(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MyProperty(int32_t) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_CustomerManagementAppData_IClass
    {
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MyProperty() const;
        WINRT_IMPL_AUTO(void) MyProperty(int32_t value) const;
    };
    template <> struct consume<winrt::CustomerManagementAppData::IClass>
    {
        template <typename D> using type = consume_CustomerManagementAppData_IClass<D>;
    };
}
#endif
